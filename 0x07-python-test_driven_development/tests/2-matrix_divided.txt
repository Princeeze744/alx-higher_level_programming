======================================
2-matrix_divided module
======================================

import the function matrix_division:
	>>> matrix_divided = __import__('2-matrix_divided').matrix_divided

****************************************************************
**Usage**: ``matrix_divided([lists of equal length], div)``
Where first argument must be a list of lists of equal length
and second argument, ``div`` must be non-zero float or int type.
Returns a new matrix, with float values approximated to
2 decimal places.
****************************************************************

	>>> matrix = [
	...	[1, 2, 3],
	...	[-4, 5, 6]
	...	]

Tests
=====

Normal use case (must return new matrix):
	>>> matrix_divided(matrix, 3)
	[[0.33, 0.67, 1.0], [-1.33, 1.67, 2.0]]
	>>> matrix
	[[1, 2, 3], [-4, 5, 6]]

Also works for negative div:
	>>> matrix_divided(matrix, -3)
	[[-0.33, -0.67, -1.0], [1.33, -1.67, -2.0]]
	>>> matrix
	[[1, 2, 3], [-4, 5, 6]]

matrix must be a list of list:
	>>> matrix_divided([1, 2, 3], 3)
	Traceback (most recent call last):
	...
	TypeError: matrix must be a matrix (list of lists) of integers/floats

Each row must be of equal length:
	>>> another_matrix = [
	...		[1, 2, 3],
	...		[4, 5, 6, 7]
	...		]
	>>> matrix_divided(another_matrix, 3)
	Traceback (most recent call last):
	...
	TypeError: Each row of the matrix must have the same size

div must be integer or float:
	>>> matrix_divided(matrix, 'school')
	Traceback (most recent call last):
	...
	TypeError: div must be a number

div must not be equal to zero:
	>>> matrix_divided(matrix, 0)
	Traceback (most recent call last):
	...
	ZeroDivisionError: division by zero

Function fails when no argument or only one argument is given:
	>>> matrix_divided()
	Traceback (most recent call last):
	...
	TypeError: matrix_divided() missing 2 required positional arguments: 'matrix' and 'div'

Division of infinity and NaN:
	>>> matrix_inf_nan = [
	...			[float('inf'), float('nan')],
	...			[float('-inf'), float('-nan')]
	...			]
	>>> matrix_divided(matrix_inf_nan, 3)
	[[inf, nan], [-inf, nan]]

Raises TypeError if matrix contains non integer/float:
	>>> matrix_divided([[1, 2, 3], [4, 'alx', 6]], 3)
	Traceback (most recent call last):
	...
	TypeError: matrix must be a matrix (list of lists) of integers/floats

division by infinity results in a zero matrix:
	>>> matrix_divided(matrix, float('inf'))
	[[0.0, 0.0, 0.0], [-0.0, 0.0, 0.0]]
